<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gg.core.dao.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.gg.core.dao.dataobject.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="attributes" jdbcType="CHAR" property="attributes" />
  </resultMap>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, open_id, nick_name, login_id, user_pwd, level, gender, 
    img_url, description, attributes
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gg.core.dao.dataobject.UserInfo">
    insert into user_info (id, gmt_create, gmt_modified, 
      open_id, nick_name, login_id, 
      user_pwd, level, gender, 
      img_url, description, attributes
      )
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{openId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{loginId,jdbcType=VARCHAR}, 
      #{userPwd,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR}, 
      #{imgUrl,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{attributes,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gg.core.dao.dataobject.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="attributes != null">
        attributes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="attributes != null">
        #{attributes,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gg.core.dao.dataobject.UserInfo">
    update user_info
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="attributes != null">
        attributes = #{attributes,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gg.core.dao.dataobject.UserInfo">
    update user_info
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      login_id = #{loginId,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      attributes = #{attributes,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>